name: Main merge
on:
  push:
    branches: [ main ]
  workflow_dispatch:
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.SES_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.SES_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: 'sa-east-1'
    FIRST_COMMENT: ${{ github.event.after.FIRST_COMMENT }}
    NOTES: "Release notes\n - feat 1"
    
jobs:
  send-email:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build body
      id: content
      run:  |
       NOTES=$(cat releases/6.2.0/release-notes.md)
       echo '{"ToAddresses":  ["private.customers@wisemonkeys.co"],"CcAddresses":  [],"BccAddresses": []}' > destination.json
       echo '{"Subject":{"Data":' > message.json
       echo  '"Test email sent using the AWS CLI"'  >> message.json
       echo  ',"Charset":"UTF-8"},"Body": {"Text": {"Data":'  >> message.json
       echo  '"This is the message body in text format."'  >> message.json
       echo  ',"Charset": "UTF-8"},"Html": {"Data":'  >> message.json
       echo  '"This message body contains HTML formatting. It can, for example, contain links like this one: <a class=\"ulink\" href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide\" target=\"_blank\">Amazon SES Developer Guide</a>.",' >> message.json
       echo  '"Charset": "UTF-8"}}}' >> message.json
       
       cat message.json


       aws ses send-email --from ops@wisemonkeys.co --destination file://destination.json --message file://message.json
       



    # - name: Send email using AWS SES
    #   uses: dsfx3d/action-aws-ses@v1
    #   with:
    #         to: 'private.customers@wisemonkeys.co'
    #         from: 'ops@wisemonkeys.co'
    #         subject: 'Wise Billing v 6.2.0'
    #         body: 'Wise Billing v 6.2.0'
    #         body_html: "<h1>Wise Billing 2.0.0</h1><p>{{ steps.content.outputs.NOTES }}</p>"
                
            
            
            
            
            #"<h1>Wise Billing v 6.2.0</h1><p>"${NOTES}"</p>"


                # steps:
                #   - name: Set tag var
                #     id: vars
                #     run: echo "docker_tag=$(echo ${GITHUB_REF} | cut -d'/' -f3)-${GITHUB_SHA}" >> $GITHUB_OUTPUT
                #   - name: Docker Build
                #     uses: "actions/docker/cli@master"
                #     with:
                #       args: build . --file Dockerfile -t cflynnus/blog:
                #   - name: Docker Tag Latest
                #     uses: "actions/docker/cli@master"
                #     with:
                #       args: tag cflynnus/blog: cflynnus/blog:latest              



            