name: Main merge
on:
  pull_request:
    types: 
      - closed
  workflow_dispatch:
env:
    ORGANIZATION: "wisemonkeys-co"  
    PRODUCT:  "wise-billing"
    REPO_TOKEN:       ${{ secrets.WISE_CD_REPO_TOKEN }}
    AWS_ACCESS_KEY_ID: ${{ secrets.SES_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.SES_SECRET_ACCESS_KEY }}
    AWS_DEFAULT_REGION: 'sa-east-1'
    PR_NUMBER: ${{ github.event.pull_request.number }}
    PR_TITLE: ${{ github.event.pull_request.title }}
    MILESTONE_NUMBER: ${{ github.event.pull_request.milestone.number }}
    MILESTONE_TITLE: ${{ github.event.pull_request.milestone.title }}
    
    
jobs:
  send-email:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Build body
      id: content
      run:  |
       echo "Number: "${PR_NUMBER}
       echo "Title: "${PR_TITLE}
       echo "Milestone number: "${MILESTONE_NUMBER}
       echo "Milestone title: "${MILESTONE_TITLE}
       NOTES=$(curl -H "Authorization: token $REPO_TOKEN" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/$ORGANIZATION/$PRODUCT/issues?state=closed\&milestone=$MILESTONE_NUMBER  | jq  '[ .[] | { description: .title}  | select(.description != "'$MILESTONE_TITLE'") ]' | sed 's/"/\\\"/g' | tr -d "\n") 

       echo "{\"Source\":\"Wise Monkeys <ops@wisemonkeys.co>\"," \
       "\"Template\"": \""notes"\""," \
       "\"Destination\": { \"ToAddresses\": [\"private.customers@wisemonkeys.co\"]}," \
       "\"TemplateData\"": \""{\\\"version\\\":\\\""$MILESTONE_TITLE"\\\", \\\"milestone\\\":\\\""$MILESTONE_NUMBER"\\\", \\\"pullRequest\\\":\\\""$PR_NUMBER"\\\", \\\"features\\\":"$NOTES"}\"}" > mail.json

       cat mail.json

       aws ses send-templated-email --cli-input-json file://mail.json

      #  TO="private.customers@wisemonkeys.co"  
      #  NOTES=$(cat releases/6.2.0/release-notes.md)
      #  SUBJECT="Wise Billing 4.0.0"
      #  TEXT="Feature1"
      #  VERSION="4.0.0"
       
      #  echo '{"ToAddresses":  ["private.customers@wisemonkeys.co"],"CcAddresses":  [],"BccAddresses": []}' > destination.json
      #  sed "s/#subject#/$SUBJECT/" template.json > 1.json
      #  sed "s/#subject#/$SUBJECT/" template.json > 1.json
      #  sed "s/#text#/$TEXT/" 1.json > 2.json
      #  sed "s/#version#/$VERSION/" 2.json > message.json
       
      #  cat message.json


      #  aws ses send-email --from ops@wisemonkeys.co --destination file://destination.json --message file://message.json
       

      #  echo '{"ToAddresses":  ["private.customers@wisemonkeys.co"],"CcAddresses":  [],"BccAddresses": []}' > destination.json
      #  echo '{"Subject":{"Data":' > message.json
      #  echo  '"Test email sent using the AWS CLI"'  >> message.json
      #  echo  ',"Charset":"UTF-8"},"Body": {"Text": {"Data":'  >> message.json
      #  echo  '"This is the message body in text format."'  >> message.json
      #  echo  ',"Charset": "UTF-8"},"Html": {"Data":'  >> message.json
      #  echo  '"This message body contains HTML formatting. It can, for example, contain links like this one: <a class=\"ulink\" href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide\" target=\"_blank\">Amazon SES Developer Guide</a>.",' >> message.json
      #  echo  '"Charset": "UTF-8"}}}' >> message.json


# 
# This message body contains HTML formatting. It can, for example, contain links like this one: <a class=\"ulink\" href=\"http://docs.aws.amazon.com/ses/latest/DeveloperGuide\" target=\"_blank\">Amazon SES Developer Guide</a>.

    # - name: Send email using AWS SES
    #   uses: dsfx3d/action-aws-ses@v1
    #   with:
    #         to: 'private.customers@wisemonkeys.co'
    #         from: 'ops@wisemonkeys.co'
    #         subject: 'Wise Billing v 6.2.0'
    #         body: 'Wise Billing v 6.2.0'
    #         body_html: "<h1>Wise Billing 2.0.0</h1><p>{{ steps.content.outputs.NOTES }}</p>"
                
            
            
            
            
            #"<h1>Wise Billing v 6.2.0</h1><p>"${NOTES}"</p>"


                # steps:
                #   - name: Set tag var
                #     id: vars
                #     run: echo "docker_tag=$(echo ${GITHUB_REF} | cut -d'/' -f3)-${GITHUB_SHA}" >> $GITHUB_OUTPUT
                #   - name: Docker Build
                #     uses: "actions/docker/cli@master"
                #     with:
                #       args: build . --file Dockerfile -t cflynnus/blog:
                #   - name: Docker Tag Latest
                #     uses: "actions/docker/cli@master"
                #     with:
                #       args: tag cflynnus/blog: cflynnus/blog:latest              



            